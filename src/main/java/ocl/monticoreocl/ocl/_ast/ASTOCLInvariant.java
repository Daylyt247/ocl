/* (c) https://github.com/MontiCore/monticore */
package ocl.monticoreocl.ocl._ast;

import java.util.Optional;

import static ocl.monticoreocl.oclexpressions._ast.ASTOCLQualifiedPrimary.name2String;
import static ocl.monticoreocl.oclexpressions._ast.ASTOCLQualifiedPrimary.name2StringOpt;

public class ASTOCLInvariant extends ASTOCLInvariantTOP {

  public ASTOCLInvariant() {
    super();
  }

  public  ASTOCLInvariant (/* generated by template ast.ConstructorParametersDeclaration*/
      Optional<ocl.monticoreocl.ocl._ast.ASTOCLClassContext> oCLClassContext
      ,
      Optional<ocl.monticoreocl.oclexpressions._ast.ASTName2> name2
      ,
      Optional<ocl.monticoreocl.ocl._ast.ASTOCLParameters> oCLParameters
      ,
      java.util.List<de.monticore.expressionsbasis._ast.ASTExpression> statementss

  ) {
    super(oCLClassContext, name2, oCLParameters, statementss);
  }

  public Optional<String> getNameOpt() {
    return name2StringOpt(getName2Opt());
  }

  public String getName() {
    return name2String(getName2());
  }

  public boolean isPresentName() {
    return isPresentName2();
  }
}
