/* (c) https://github.com/MontiCore/monticore */
package invariants;

ocl Test02 {

  inv B_fa_sat:
    forall Boolean b:
         b == !(!(b));

  inv Many_fa_sat:
      forall Boolean b:
        forall boolean c:
          forall boolean d:
            b == !(!(b));

  inv Many_fa_unsat:
        forall Boolean b:
          forall boolean c:
            forall boolean d:
              b == true &&
              b == c &&
              c == d &&
              d == false ;

  inv B_fa_unsat:
      forall Boolean b:
           b == true;

  inv BC_fa_sat:
      forall Boolean b, c:
           b == !(!(b))&&
           c == c;

  inv Auction_fa_sat:
    forall Auction a:
         a.auctionIdent == 13;

  inv Auction_fa_unsat:
      forall Auction a:
           a.auctionIdent == 13&&
           a.auctionIdent == 14;


//----------------exists---------------------------------------
  inv B_ex_sat:
      exists Boolean b:
           b == !(!(b));
  inv Many_ex_sat:
        exists Boolean b:
          exists boolean c:
            exists boolean d:
              b == !(!(b));

  inv Many_ex_unsat:
          exists Boolean b:
            exists boolean c:
              exists boolean d:
                b == true &&
                b == c &&
                c == d &&
                d == false ;

  inv B_ex_unsat:
        exists Boolean b:
             b == !b;

   inv BC_ex_sat:
        exists Boolean b ,c:
             b == true&&
             b == c &&
             c == false;

   inv Auction_ex_sat:
       exists Auction a:
            a.auctionIdent == 13;

   inv Auction_ex_unsat:
         exists Auction a:
              a.auctionIdent == 13&&
              a.auctionIdent == 14;

  inv Ex_two_auction_and_bool_sat:
           exists Auction a,b, Boolean c:
             a != b &&
             c == true ;


//--------------------------exists and forall---------------
inv Auction_two_sat:
       exists Auction a1 , b1:
         a1 != b1 &&
         (forall Auction a ,b :
           a.auctionIdent == b.auctionIdent &&
           a.auctionIdent == 10)  ;

  inv Two_auction_and_bool_sat:
         exists Auction a1,b1, Boolean c:
           c == true &&
           (forall Auction a ,b :
             a.auctionIdent == 14 &&
              b.auctionIdent == 14 &&
              a.auctionIdent == b.auctionIdent &&
              c == true) &&
           a1 != b1 ;


  inv Two_auction_and_bool_unsat:
           exists Auction a1,b1, Boolean c:
             a1 != b1 &&
             c == true &&
             (forall Auction a ,b :
                a.auctionIdent == 15 &&
                b.auctionIdent == 15 &&
                a.auctionIdent == b.auctionIdent &&
                c == false)  ;
}