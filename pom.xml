<!-- (c) https://github.com/MontiCore/monticore -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <!-- == PROJECT COORDINATES ============================================= -->

  <groupId>de.monticore.lang</groupId>
  <artifactId>ocl</artifactId>
  <version>1.2.0-SNAPSHOT</version>

  <!-- == PROJECT DEPENDENCIES ============================================= -->

  <properties>

    <!-- .. SE-Libraries .................................................. -->
    <monticore.version>6.1.0.1</monticore.version>
    <se-commons.version>1.7.9</se-commons.version>
    <mc.grammars.assembly.version>0.0.10</mc.grammars.assembly.version>
    <cd4analysis.version>1.7.0</cd4analysis.version>

    <!-- .. Libraries .................................................. -->
    <guava.version>18.0</guava.version>
    <junit.jupiter.version>5.5.2</junit.jupiter.version>
    <junit.vintage.version>${junit.jupiter.version}</junit.vintage.version>
    <junit.version>4.12</junit.version>
    <junit.platform.version>1.1.0</junit.platform.version>
    <assertj.version>3.7.0</assertj.version>
    <logback.version>1.1.2</logback.version>
    <jscience.version>4.3.1</jscience.version>

    <!-- .. Plugins ....................................................... -->
    <assembly.plugin>2.5.4</assembly.plugin>
    <compiler.plugin>3.3</compiler.plugin>
    <source.plugin>2.4</source.plugin>
    <shade.plugin>2.4.3</shade.plugin>
    <jacoco.plugin>0.8.5</jacoco.plugin>
    <jacoco.reportPath>${project.basedir}/../target/jacoco.exec</jacoco.reportPath>
    <surefire.plugin>3.0.0-M4</surefire.plugin>
    <failsafe.plugin>3.0.0-M4</failsafe.plugin>

    <!-- Classifiers -->
    <grammars.classifier>grammars</grammars.classifier>
    <cli.classifier>cli</cli.classifier>

    <!-- .. Misc .......................................................... -->
    <java.version>1.8</java.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <github.global.server>github</github.global.server>
  </properties>

  <dependencies>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>de.se_rwth.commons</groupId>
      <artifactId>se-commons-logging</artifactId>
      <version>${se-commons.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jscience</groupId>
      <artifactId>jscience</artifactId>
      <version>${jscience.version}</version>
    </dependency>

    <!-- MontiCore Dependencies -->
    <dependency>
      <groupId>de.monticore.lang</groupId>
      <artifactId>cd4analysis</artifactId>
      <version>${cd4analysis.version}</version>
    </dependency>

    <dependency>
      <groupId>de.monticore</groupId>
      <artifactId>monticore-runtime</artifactId>
      <version>${monticore.version}</version>
    </dependency>

    <dependency>
      <groupId>de.monticore</groupId>
      <artifactId>monticore-grammar</artifactId>
      <version>${monticore.version}</version>
    </dependency>

    <dependency>
      <groupId>de.monticore</groupId>
      <artifactId>monticore-grammar</artifactId>
      <version>${monticore.version}</version>
      <classifier>${grammars.classifier}</classifier>
    </dependency>

    <!-- .. Test Libraries ............................................... -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <!-- doc: http://joel-costigliola.github.io/assertj/ -->
    </dependency>

    <dependency>
      <groupId>de.monticore</groupId>
      <artifactId>monticore-runtime</artifactId>
      <version>${monticore.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- == PROJECT BUILD SETTINGS =========================================== -->

  <profiles>
    <profile>
      <id>skipTests</id>
      <properties>
        <skipTests>true</skipTests>
      </properties>
    </profile>
  </profiles>

  <!-- Deploy Configuration -->
  <build>
    <plugins>
      <!-- there is a bug in spring, https://stackoverflow.com/questions/50661648/spring-boot-fails-to-run-maven-surefire-plugin-classnotfoundexception-org-apache -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>


      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.1</version>
      </plugin>

      <!-- MontiCore Generation -->
      <plugin>
        <groupId>de.monticore.mojo</groupId>
        <artifactId>monticore-maven-plugin</artifactId>
        <version>${monticore.version}</version>
        <configuration>
          <skip>false</skip>
          <script>de/monticore/monticore_noemf.groovy</script>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Other Configuration -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler.plugin}</version>
        <configuration>
          <useIncrementalCompilation>true</useIncrementalCompilation>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${assembly.plugin}</version>
        <dependencies>
          <dependency>
            <groupId>de.monticore</groupId>
            <artifactId>mc-assemblies</artifactId>
            <version>${mc.grammars.assembly.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>grammars</id>
            <configuration>
              <finalName>${project.artifactId}-${project.version}</finalName>
              <descriptorRefs>
                <descriptorRef>grammars-assembly</descriptorRef>
              </descriptorRefs>
              <formats>
                <format>jar</format>
              </formats>
            </configuration>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Build old OCLCLITool -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${shade.plugin}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>${cli.classifier}</shadedClassifierName>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <include>**/*.java</include>
                    <include>**/*.ftl</include>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>ocl.cli.OCLCDTool</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Source Jar Configuration -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${source.plugin}</version>
        <executions>
          <execution>
            <id>create source jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <configuration>
              <excludeResources>false</excludeResources>
              <includes>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Unit Tests -->
      <!-- default folder is src/test/java/ -->
      <!-- default incl. are "**/Test*.java", "**/*Test.java", "**/*TestCase.java" -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.plugin}</version>
        <configuration>
          <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
          <skipTests>${skip.unit.tests}</skipTests>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
        <dependencies>
          <!-- let JUnit vintage engine run JUnit 3 or JUnit 4 tests -->
          <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.vintage.version}</version>
          </dependency>
          <!-- let JUnit 5 engine run JUnit 5 tests -->
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Integration / Acceptance Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.plugin}</version>
        <configuration>
          <skipTests>${skip.integration.tests}</skipTests>
          <includes>
            <!-- Integration Tests -->
            <!-- default folder is src/integration-test/java/ -->
            <!-- default incl. are "**/IT*.java", "**/*IT.java", "**/*ITCase.java" -->
            <include>**/IT*.java</include>
            <include>**/*IT.java</include>
            <include>**/*ITCase.java</include>
            <!-- Acceptance Tests -->
            <!-- default folder is src/acceptance-test/java/ -->
            <!-- default incl. are "**/AT*.java", "**/*AT.java", "**/*ATCase.java" -->
            <include>**/AT*.java</include>
            <include>**/*AT.java</include>
            <include>**/*ATCase.java</include>
          </includes>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
        <dependencies>
          <!-- let surefire run JUnit 4 but also JUnit 5 tests -->
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${junit.platform.version}</version>
          </dependency>
          <!-- let JUnit vintage engine run JUnit 3 or JUnit 4 tests -->
          <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.vintage.version}</version>
          </dependency>
          <!-- let JUnit 5 engine run JUnit 5 tests -->
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
        <configuration>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <format>xml</format>
          <maxmem>256m</maxmem>
          <!-- aggregated reports for multi-module projects -->
          <aggregate>true</aggregate>
          <check/>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.14</version>

        <dependencies>
          <dependency>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-core</artifactId>
            <version>1.6</version>
          </dependency>
          <dependency>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-site-renderer</artifactId>
            <version>1.6</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Coverage Report -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.plugin}</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>**/_*/*.class</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>se-nexus</id>
      <url>https://nexus.se.rwth-aachen.de/content/groups/public/</url>
    </repository>
    <repository>
      <id>montibelle-gitlab-maven</id>
      <url>https://git.rwth-aachen.de/api/v4/groups/montibelle/-/packages/maven</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>se-nexus</id>
      <url>https://nexus.se.rwth-aachen.de/content/groups/public/</url>
    </pluginRepository>
  </pluginRepositories>


  <distributionManagement>
    <repository>
      <id>se-nexus</id>
      <url>https://nexus.se.rwth-aachen.de/content/repositories/monticore-releases/</url>
    </repository>
    <snapshotRepository>
      <id>se-nexus</id>
      <url>https://nexus.se.rwth-aachen.de/content/repositories/monticore-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

</project>
