/**
 *
 * (c) https://github.com/MontiCore/monticore
 *
 * The license generally applicable for this project
 * can be found under https://github.com/MontiCore/monticore.
 */
/**
 *
 * /* (c) https://github.com/MontiCore/monticore */
 *
 * The license generally applicable for this project
 * can be found under https://github.com/MontiCore/monticore.
 */
/* (c) https://github.com/MontiCore/monticore */
package ocl.monticoreocl.ocl._ast;

import de.monticore.types.types._ast.ASTType;

import java.util.List;
import java.util.Optional;

import static ocl.monticoreocl.oclexpressions._ast.ASTOCLQualifiedPrimary.name2String;
import static ocl.monticoreocl.oclexpressions._ast.ASTOCLQualifiedPrimary.name2StringList;

public class ASTOCLContextDefinition extends ASTOCLContextDefinitionTOP {

  public ASTOCLContextDefinition() {
    super();
  }

  protected  ASTOCLContextDefinition (/* generated by template ast.ConstructorParametersDeclaration*/
      Optional<ASTType> type
      ,
      java.util.List<ocl.monticoreocl.oclexpressions._ast.ASTName2> varNames2s
      ,
      Optional<de.monticore.expressionsbasis._ast.ASTExpression> expression

  ) {
    super(type, varNames2s, expression);
  }

  public List<String> getVarNamesList() {
    return name2StringList(getVarNames2List());
  }

  public String getVarNames(int i) {
    return name2String(getVarNames2(i));
  }
}
