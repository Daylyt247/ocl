/**
 *
 * (c) https://github.com/MontiCore/monticore
 *
 * The license generally applicable for this project
 * can be found under https://github.com/MontiCore/monticore.
 */
/**
 *
 * /* (c) https://github.com/MontiCore/monticore */
 *
 * The license generally applicable for this project
 * can be found under https://github.com/MontiCore/monticore.
 */
/* (c) https://github.com/MontiCore/monticore */
package ocl.monticoreocl.ocl._ast;

import de.monticore.types.types._ast.ASTReturnType;
import ocl.monticoreocl.oclexpressions._ast.ASTOCLQualifiedPrimary;

import java.util.Optional;

public class ASTOCLMethodDeclaration extends ASTOCLMethodDeclarationTOP {

  public ASTOCLMethodDeclaration() {
    super();
  }

  protected  ASTOCLMethodDeclaration (/* generated by template ast.ConstructorParametersDeclaration*/
      Optional<ASTReturnType> returnType
      ,
      ocl.monticoreocl.oclexpressions._ast.ASTName2 name2
      ,
      ocl.monticoreocl.ocl._ast.ASTOCLParameters oCLParameters
      ,
      de.monticore.expressionsbasis._ast.ASTExpression expression

  ) {
    super(returnType, name2, oCLParameters, expression);
  }

  public String getName() {
    return ASTOCLQualifiedPrimary.name2String(getName2());
  }
}
